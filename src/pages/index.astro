---
import BaseLayout from "../layout/BaseLayout.astro";

import bgImage from "../assets/bg/forest.avif";
import grainSvg from "../assets/grain.svg";
import avatarSvg from "../assets/avatar.svg";

import {Image, getImage} from "astro:assets";

const bg = await getImage({ src: bgImage, format: "jpeg" });
---

<BaseLayout>
	<div class="main">
		<div class="hero">
			<div class="bg" style={`--bg: url(${bg.src}); --grain: url(${grainSvg.src});`} />
			<Image src={avatarSvg} alt="Avatar" class="avatar" />
			<div class="content">
				<div class="links">
					<a href="https://github.com/froehlichA">Github</a>
				</div>
				<div class="heading">
					<h1>fr√∂hlich.alex</h1>
					<span>The Web Directory</span>
				</div>
				<div class="colorline">
					<div class="cyan"></div>
					<div class="magenta"></div>
					<div class="yellow"></div>
					<div class="black"></div>
				</div>
			</div>
		</div>
	</div>
</BaseLayout>

<style>
	.main {
		padding: 6em 6vw;
		height: 100%;
	}

	.hero {
		position: relative;
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		grid-template-rows: repeat(8, 1fr);
		padding: 3em;
	}

	.bg {
		position: absolute;
		left: 0;
		top: 0;
		height: calc(100% / 8 * 7);
		width: 100%;
		border-top-left-radius: 42px;
		border-top-right-radius: 42px;

		background-image: var(--grain), var(--bg);
		background-position: center, center bottom;
		background-size: auto, cover;
		filter: contrast(150%) saturate(110%) brightness(120%);
		background-attachment: fixed;
		background-repeat: repeat, no-repeat;

		z-index: -1;
	}

	.avatar {
		grid-column: span 1;
		grid-row: span 8;

		height: 100%;
		width: 100%;
		max-height: 95vh;
		object-fit: contain;
	}

	.content {
		grid-column: span 2;
		grid-row: span 7;

		display: flex;
		flex-direction: column;
		justify-content: space-between;
		gap: 2em;
		align-items: end;

		color: white;
	}

	.links {
		grid-column: span 2;
		font-size: 1.2em;
	}

	.heading {
		grid-column: span 2;
		text-align: end;
	}

	.heading h1 {
		font-size: min(8em, 12vw);
		font-style: italic;
		color: aliceblue;
		mix-blend-mode: exclusion;
		margin: 0;
	}

	.heading span {
		font-size: min(2em, 6vw);
	}

	.colorline {
		grid-column: span 2;
		display: flex;
	}

	.colorline > * {
		height: 1em;
		width: 1em;
	}

	.cyan {
		background: cyan;
	}

	.magenta {
		background: magenta;
	}

	.yellow {
		background: yellow;
	}

	.black {
		background: black;
	}

	a {
		color: inherit;
		text-decoration: underline;
	}

	@media only screen and (max-width: 660px) {
		.main {
			padding: 6vw 0 6vw 6vw;
		}

		.hero {
			grid-template-columns: 1fr;
		}

		.avatar {
			position: absolute;
			grid-column: 1 / span 2;
			grid-row: 1 / span 7;
			left: -45vw;
			bottom: 0;
			z-index: -1;
		}

		.bg {
			border-top-right-radius: 0px;
			border-bottom-left-radius: 42px;
		}
	}
</style>
